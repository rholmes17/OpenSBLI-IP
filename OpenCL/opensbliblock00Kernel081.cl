//
// auto-generated by ops.py
//

#ifdef OCL_FMA
#pragma OPENCL FP_CONTRACT ON
#else
#pragma OPENCL FP_CONTRACT OFF
#endif
#pragma OPENCL EXTENSION cl_khr_fp64:enable

#define OPS_3D
#define OPS_API 2
#define OPS_NO_GLOBALS
#include "ops_macros.h"
#include "ops_opencl_reduction.h"

#ifndef MIN
#define MIN(a,b) ((a<b) ? (a) : (b))
#endif
#ifndef MAX
#define MAX(a,b) ((a>b) ? (a) : (b))
#endif
#ifndef SIGN
#define SIGN(a,b) ((b<0.0) ? (a*(-1)) : (a))
#endif
#define OPS_READ 0
#define OPS_WRITE 1
#define OPS_RW 2
#define OPS_INC 3
#define OPS_MIN 4
#define OPS_MAX 5
#define ZERO_double 0.0;
#define INFINITY_double INFINITY;
#define ZERO_float 0.0f;
#define INFINITY_float INFINITY;
#define ZERO_int 0;
#define INFINITY_int INFINITY;
#define ZERO_uint 0;
#define INFINITY_uint INFINITY;
#define ZERO_ll 0;
#define INFINITY_ll INFINITY;
#define ZERO_ull 0;
#define INFINITY_ull INFINITY;
#define ZERO_bool 0;

//user function

 void opensbliblock00Kernel081(const ptr_double wk8_B0,
  const ptr_double wk5_B0,
  const ptr_double u2_B0,
  const ptr_double wk23_B0,
  const ptr_double wk17_B0,
  const ptr_double wk16_B0,
  const ptr_double wk13_B0,
  const ptr_double u0_B0,
  const ptr_double wk9_B0,
  const
ptr_double wk22_B0,
  const ptr_double wk21_B0,
  const ptr_double wk1_B0,
  const ptr_double wk10_B0,
  const ptr_double wk12_B0,
  const ptr_double u1_B0,
  const ptr_double wk14_B0,
  const ptr_double wk24_B0,
  const ptr_double wk26_B0,
  const ptr_double wk3_B0,
  const ptr_double wk0_B0,
  const ptr_double wk19_B0,
  const ptr_double wk25_B0,
  const ptr_double wk20_B0,
  const ptr_double wk18_B0,
  const ptr_double wk11_B0,
  const
ptr_double wk6_B0,
  const ptr_double wk4_B0,
  const ptr_double wk15_B0,
  const ptr_double wk7_B0,
  const ptr_double wk2_B0,
  ptr_double Residual4_B0,
  ptr_double Residual3_B0,
  ptr_double Residual2_B0,
  ptr_double Residual1_B0, const double gama, const double rcinv7, const double rc8, const double rc9, const double rcinv10, const double rcinv11, const double rc12)
{
    OPS_ACCS(Residual1_B0, 0,0,0) = 1.0*rcinv7*((rc8)*OPS_ACCS(wk17_B0, 0,0,0) + (rc9)*OPS_ACCS(wk24_B0, 0,0,0) +
      OPS_ACCS(wk25_B0, 0,0,0) + (rc9)*OPS_ACCS(wk3_B0, 0,0,0) + OPS_ACCS(wk8_B0, 0,0,0)) +
      OPS_ACCS(Residual1_B0, 0,0,0);

    OPS_ACCS(Residual2_B0, 0,0,0) = 1.0*rcinv7*(OPS_ACCS(wk0_B0, 0,0,0) + (rc8)*OPS_ACCS(wk20_B0, 0,0,0) +
      (rc9)*OPS_ACCS(wk21_B0, 0,0,0) + OPS_ACCS(wk4_B0, 0,0,0) + (rc9)*OPS_ACCS(wk9_B0, 0,0,0)) +
      OPS_ACCS(Residual2_B0, 0,0,0);

    OPS_ACCS(Residual3_B0, 0,0,0) = 1.0*rcinv7*(OPS_ACCS(wk11_B0, 0,0,0) + (rc8)*OPS_ACCS(wk14_B0, 0,0,0) +
      (rc9)*OPS_ACCS(wk16_B0, 0,0,0) + OPS_ACCS(wk18_B0, 0,0,0) + (rc9)*OPS_ACCS(wk23_B0, 0,0,0)) +
      OPS_ACCS(Residual3_B0, 0,0,0);

    OPS_ACCS(Residual4_B0, 0,0,0) = 1.0*rcinv10*rcinv11*rcinv7*(OPS_ACCS(wk12_B0, 0,0,0) + OPS_ACCS(wk19_B0, 0,0,0) +
      OPS_ACCS(wk1_B0, 0,0,0))/(gama - 1) + 1.0*rcinv7*(OPS_ACCS(wk10_B0, 0,0,0) +
      OPS_ACCS(wk7_B0, 0,0,0))*OPS_ACCS(wk10_B0, 0,0,0) + 1.0*rcinv7*(OPS_ACCS(wk10_B0, 0,0,0) +
      OPS_ACCS(wk7_B0, 0,0,0))*OPS_ACCS(wk7_B0, 0,0,0) + 1.0*rcinv7*(OPS_ACCS(wk15_B0, 0,0,0) +
      OPS_ACCS(wk22_B0, 0,0,0))*OPS_ACCS(wk15_B0, 0,0,0) + 1.0*rcinv7*(OPS_ACCS(wk15_B0, 0,0,0) +
      OPS_ACCS(wk22_B0, 0,0,0))*OPS_ACCS(wk22_B0, 0,0,0) + 1.0*rcinv7*(OPS_ACCS(wk5_B0, 0,0,0) +
      OPS_ACCS(wk6_B0, 0,0,0))*OPS_ACCS(wk5_B0, 0,0,0) + 1.0*rcinv7*(OPS_ACCS(wk5_B0, 0,0,0) +
      OPS_ACCS(wk6_B0, 0,0,0))*OPS_ACCS(wk6_B0, 0,0,0) + 1.0*rcinv7*(-rc12*OPS_ACCS(wk13_B0, 0,0,0) -
      rc12*OPS_ACCS(wk26_B0, 0,0,0) + (rc8)*OPS_ACCS(wk2_B0, 0,0,0))*OPS_ACCS(wk2_B0, 0,0,0) +
      1.0*rcinv7*(-rc12*OPS_ACCS(wk13_B0, 0,0,0) + (rc8)*OPS_ACCS(wk26_B0, 0,0,0) -
      rc12*OPS_ACCS(wk2_B0, 0,0,0))*OPS_ACCS(wk26_B0, 0,0,0) + 1.0*rcinv7*((rc8)*OPS_ACCS(wk13_B0, 0,0,0) -
      rc12*OPS_ACCS(wk26_B0, 0,0,0) - rc12*OPS_ACCS(wk2_B0, 0,0,0))*OPS_ACCS(wk13_B0, 0,0,0) +
      1.0*rcinv7*(OPS_ACCS(wk0_B0, 0,0,0) + (rc8)*OPS_ACCS(wk20_B0, 0,0,0) + (rc9)*OPS_ACCS(wk21_B0, 0,0,0) +
      OPS_ACCS(wk4_B0, 0,0,0) + (rc9)*OPS_ACCS(wk9_B0, 0,0,0))*OPS_ACCS(u1_B0, 0,0,0) +
      1.0*rcinv7*(OPS_ACCS(wk11_B0, 0,0,0) + (rc8)*OPS_ACCS(wk14_B0, 0,0,0) + (rc9)*OPS_ACCS(wk16_B0, 0,0,0) +
      OPS_ACCS(wk18_B0, 0,0,0) + (rc9)*OPS_ACCS(wk23_B0, 0,0,0))*OPS_ACCS(u2_B0, 0,0,0) +
      1.0*rcinv7*((rc8)*OPS_ACCS(wk17_B0, 0,0,0) + (rc9)*OPS_ACCS(wk24_B0, 0,0,0) + OPS_ACCS(wk25_B0, 0,0,0) +
      (rc9)*OPS_ACCS(wk3_B0, 0,0,0) + OPS_ACCS(wk8_B0, 0,0,0))*OPS_ACCS(u0_B0, 0,0,0) +
      OPS_ACCS(Residual4_B0, 0,0,0);

}


__kernel void ops_opensbliblock00Kernel081(
__global const double* restrict arg0,
__global const double* restrict arg1,
__global const double* restrict arg2,
__global const double* restrict arg3,
__global const double* restrict arg4,
__global const double* restrict arg5,
__global const double* restrict arg6,
__global const double* restrict arg7,
__global const double* restrict arg8,
__global const double* restrict arg9,
__global const double* restrict arg10,
__global const double* restrict arg11,
__global const double* restrict arg12,
__global const double* restrict arg13,
__global const double* restrict arg14,
__global const double* restrict arg15,
__global const double* restrict arg16,
__global const double* restrict arg17,
__global const double* restrict arg18,
__global const double* restrict arg19,
__global const double* restrict arg20,
__global const double* restrict arg21,
__global const double* restrict arg22,
__global const double* restrict arg23,
__global const double* restrict arg24,
__global const double* restrict arg25,
__global const double* restrict arg26,
__global const double* restrict arg27,
__global const double* restrict arg28,
__global const double* restrict arg29,
__global double* restrict arg30,
__global double* restrict arg31,
__global double* restrict arg32,
__global double* restrict arg33,
const double gama,
const double rcinv7,
const double rc8,
const double rc9,
const double rcinv10,
const double rcinv11,
const double rc12,
const int base0,
const int base1,
const int base2,
const int base3,
const int base4,
const int base5,
const int base6,
const int base7,
const int base8,
const int base9,
const int base10,
const int base11,
const int base12,
const int base13,
const int base14,
const int base15,
const int base16,
const int base17,
const int base18,
const int base19,
const int base20,
const int base21,
const int base22,
const int base23,
const int base24,
const int base25,
const int base26,
const int base27,
const int base28,
const int base29,
const int base30,
const int base31,
const int base32,
const int base33,
const int size0,
const int size1,
const int size2 ){


  int idx_y = get_global_id(1);
  int idx_z = get_global_id(2);
  int idx_x = get_global_id(0);

  if (idx_x < size0 && idx_y < size1 && idx_z < size2) {
    const ptr_double ptr0 = { &arg0[base0 + idx_x * 1*1 + idx_y * 1*1 * xdim0_opensbliblock00Kernel081 + idx_z * 1*1 * xdim0_opensbliblock00Kernel081 * ydim0_opensbliblock00Kernel081], xdim0_opensbliblock00Kernel081, ydim0_opensbliblock00Kernel081};
    const ptr_double ptr1 = { &arg1[base1 + idx_x * 1*1 + idx_y * 1*1 * xdim1_opensbliblock00Kernel081 + idx_z * 1*1 * xdim1_opensbliblock00Kernel081 * ydim1_opensbliblock00Kernel081], xdim1_opensbliblock00Kernel081, ydim1_opensbliblock00Kernel081};
    const ptr_double ptr2 = { &arg2[base2 + idx_x * 1*1 + idx_y * 1*1 * xdim2_opensbliblock00Kernel081 + idx_z * 1*1 * xdim2_opensbliblock00Kernel081 * ydim2_opensbliblock00Kernel081], xdim2_opensbliblock00Kernel081, ydim2_opensbliblock00Kernel081};
    const ptr_double ptr3 = { &arg3[base3 + idx_x * 1*1 + idx_y * 1*1 * xdim3_opensbliblock00Kernel081 + idx_z * 1*1 * xdim3_opensbliblock00Kernel081 * ydim3_opensbliblock00Kernel081], xdim3_opensbliblock00Kernel081, ydim3_opensbliblock00Kernel081};
    const ptr_double ptr4 = { &arg4[base4 + idx_x * 1*1 + idx_y * 1*1 * xdim4_opensbliblock00Kernel081 + idx_z * 1*1 * xdim4_opensbliblock00Kernel081 * ydim4_opensbliblock00Kernel081], xdim4_opensbliblock00Kernel081, ydim4_opensbliblock00Kernel081};
    const ptr_double ptr5 = { &arg5[base5 + idx_x * 1*1 + idx_y * 1*1 * xdim5_opensbliblock00Kernel081 + idx_z * 1*1 * xdim5_opensbliblock00Kernel081 * ydim5_opensbliblock00Kernel081], xdim5_opensbliblock00Kernel081, ydim5_opensbliblock00Kernel081};
    const ptr_double ptr6 = { &arg6[base6 + idx_x * 1*1 + idx_y * 1*1 * xdim6_opensbliblock00Kernel081 + idx_z * 1*1 * xdim6_opensbliblock00Kernel081 * ydim6_opensbliblock00Kernel081], xdim6_opensbliblock00Kernel081, ydim6_opensbliblock00Kernel081};
    const ptr_double ptr7 = { &arg7[base7 + idx_x * 1*1 + idx_y * 1*1 * xdim7_opensbliblock00Kernel081 + idx_z * 1*1 * xdim7_opensbliblock00Kernel081 * ydim7_opensbliblock00Kernel081], xdim7_opensbliblock00Kernel081, ydim7_opensbliblock00Kernel081};
    const ptr_double ptr8 = { &arg8[base8 + idx_x * 1*1 + idx_y * 1*1 * xdim8_opensbliblock00Kernel081 + idx_z * 1*1 * xdim8_opensbliblock00Kernel081 * ydim8_opensbliblock00Kernel081], xdim8_opensbliblock00Kernel081, ydim8_opensbliblock00Kernel081};
    const ptr_double ptr9 = { &arg9[base9 + idx_x * 1*1 + idx_y * 1*1 * xdim9_opensbliblock00Kernel081 + idx_z * 1*1 * xdim9_opensbliblock00Kernel081 * ydim9_opensbliblock00Kernel081], xdim9_opensbliblock00Kernel081, ydim9_opensbliblock00Kernel081};
    const ptr_double ptr10 = { &arg10[base10 + idx_x * 1*1 + idx_y * 1*1 * xdim10_opensbliblock00Kernel081 + idx_z * 1*1 * xdim10_opensbliblock00Kernel081 * ydim10_opensbliblock00Kernel081], xdim10_opensbliblock00Kernel081, ydim10_opensbliblock00Kernel081};
    const ptr_double ptr11 = { &arg11[base11 + idx_x * 1*1 + idx_y * 1*1 * xdim11_opensbliblock00Kernel081 + idx_z * 1*1 * xdim11_opensbliblock00Kernel081 * ydim11_opensbliblock00Kernel081], xdim11_opensbliblock00Kernel081, ydim11_opensbliblock00Kernel081};
    const ptr_double ptr12 = { &arg12[base12 + idx_x * 1*1 + idx_y * 1*1 * xdim12_opensbliblock00Kernel081 + idx_z * 1*1 * xdim12_opensbliblock00Kernel081 * ydim12_opensbliblock00Kernel081], xdim12_opensbliblock00Kernel081, ydim12_opensbliblock00Kernel081};
    const ptr_double ptr13 = { &arg13[base13 + idx_x * 1*1 + idx_y * 1*1 * xdim13_opensbliblock00Kernel081 + idx_z * 1*1 * xdim13_opensbliblock00Kernel081 * ydim13_opensbliblock00Kernel081], xdim13_opensbliblock00Kernel081, ydim13_opensbliblock00Kernel081};
    const ptr_double ptr14 = { &arg14[base14 + idx_x * 1*1 + idx_y * 1*1 * xdim14_opensbliblock00Kernel081 + idx_z * 1*1 * xdim14_opensbliblock00Kernel081 * ydim14_opensbliblock00Kernel081], xdim14_opensbliblock00Kernel081, ydim14_opensbliblock00Kernel081};
    const ptr_double ptr15 = { &arg15[base15 + idx_x * 1*1 + idx_y * 1*1 * xdim15_opensbliblock00Kernel081 + idx_z * 1*1 * xdim15_opensbliblock00Kernel081 * ydim15_opensbliblock00Kernel081], xdim15_opensbliblock00Kernel081, ydim15_opensbliblock00Kernel081};
    const ptr_double ptr16 = { &arg16[base16 + idx_x * 1*1 + idx_y * 1*1 * xdim16_opensbliblock00Kernel081 + idx_z * 1*1 * xdim16_opensbliblock00Kernel081 * ydim16_opensbliblock00Kernel081], xdim16_opensbliblock00Kernel081, ydim16_opensbliblock00Kernel081};
    const ptr_double ptr17 = { &arg17[base17 + idx_x * 1*1 + idx_y * 1*1 * xdim17_opensbliblock00Kernel081 + idx_z * 1*1 * xdim17_opensbliblock00Kernel081 * ydim17_opensbliblock00Kernel081], xdim17_opensbliblock00Kernel081, ydim17_opensbliblock00Kernel081};
    const ptr_double ptr18 = { &arg18[base18 + idx_x * 1*1 + idx_y * 1*1 * xdim18_opensbliblock00Kernel081 + idx_z * 1*1 * xdim18_opensbliblock00Kernel081 * ydim18_opensbliblock00Kernel081], xdim18_opensbliblock00Kernel081, ydim18_opensbliblock00Kernel081};
    const ptr_double ptr19 = { &arg19[base19 + idx_x * 1*1 + idx_y * 1*1 * xdim19_opensbliblock00Kernel081 + idx_z * 1*1 * xdim19_opensbliblock00Kernel081 * ydim19_opensbliblock00Kernel081], xdim19_opensbliblock00Kernel081, ydim19_opensbliblock00Kernel081};
    const ptr_double ptr20 = { &arg20[base20 + idx_x * 1*1 + idx_y * 1*1 * xdim20_opensbliblock00Kernel081 + idx_z * 1*1 * xdim20_opensbliblock00Kernel081 * ydim20_opensbliblock00Kernel081], xdim20_opensbliblock00Kernel081, ydim20_opensbliblock00Kernel081};
    const ptr_double ptr21 = { &arg21[base21 + idx_x * 1*1 + idx_y * 1*1 * xdim21_opensbliblock00Kernel081 + idx_z * 1*1 * xdim21_opensbliblock00Kernel081 * ydim21_opensbliblock00Kernel081], xdim21_opensbliblock00Kernel081, ydim21_opensbliblock00Kernel081};
    const ptr_double ptr22 = { &arg22[base22 + idx_x * 1*1 + idx_y * 1*1 * xdim22_opensbliblock00Kernel081 + idx_z * 1*1 * xdim22_opensbliblock00Kernel081 * ydim22_opensbliblock00Kernel081], xdim22_opensbliblock00Kernel081, ydim22_opensbliblock00Kernel081};
    const ptr_double ptr23 = { &arg23[base23 + idx_x * 1*1 + idx_y * 1*1 * xdim23_opensbliblock00Kernel081 + idx_z * 1*1 * xdim23_opensbliblock00Kernel081 * ydim23_opensbliblock00Kernel081], xdim23_opensbliblock00Kernel081, ydim23_opensbliblock00Kernel081};
    const ptr_double ptr24 = { &arg24[base24 + idx_x * 1*1 + idx_y * 1*1 * xdim24_opensbliblock00Kernel081 + idx_z * 1*1 * xdim24_opensbliblock00Kernel081 * ydim24_opensbliblock00Kernel081], xdim24_opensbliblock00Kernel081, ydim24_opensbliblock00Kernel081};
    const ptr_double ptr25 = { &arg25[base25 + idx_x * 1*1 + idx_y * 1*1 * xdim25_opensbliblock00Kernel081 + idx_z * 1*1 * xdim25_opensbliblock00Kernel081 * ydim25_opensbliblock00Kernel081], xdim25_opensbliblock00Kernel081, ydim25_opensbliblock00Kernel081};
    const ptr_double ptr26 = { &arg26[base26 + idx_x * 1*1 + idx_y * 1*1 * xdim26_opensbliblock00Kernel081 + idx_z * 1*1 * xdim26_opensbliblock00Kernel081 * ydim26_opensbliblock00Kernel081], xdim26_opensbliblock00Kernel081, ydim26_opensbliblock00Kernel081};
    const ptr_double ptr27 = { &arg27[base27 + idx_x * 1*1 + idx_y * 1*1 * xdim27_opensbliblock00Kernel081 + idx_z * 1*1 * xdim27_opensbliblock00Kernel081 * ydim27_opensbliblock00Kernel081], xdim27_opensbliblock00Kernel081, ydim27_opensbliblock00Kernel081};
    const ptr_double ptr28 = { &arg28[base28 + idx_x * 1*1 + idx_y * 1*1 * xdim28_opensbliblock00Kernel081 + idx_z * 1*1 * xdim28_opensbliblock00Kernel081 * ydim28_opensbliblock00Kernel081], xdim28_opensbliblock00Kernel081, ydim28_opensbliblock00Kernel081};
    const ptr_double ptr29 = { &arg29[base29 + idx_x * 1*1 + idx_y * 1*1 * xdim29_opensbliblock00Kernel081 + idx_z * 1*1 * xdim29_opensbliblock00Kernel081 * ydim29_opensbliblock00Kernel081], xdim29_opensbliblock00Kernel081, ydim29_opensbliblock00Kernel081};
    ptr_double ptr30 = { &arg30[base30 + idx_x * 1*1 + idx_y * 1*1 * xdim30_opensbliblock00Kernel081 + idx_z * 1*1 * xdim30_opensbliblock00Kernel081 * ydim30_opensbliblock00Kernel081], xdim30_opensbliblock00Kernel081, ydim30_opensbliblock00Kernel081};
    ptr_double ptr31 = { &arg31[base31 + idx_x * 1*1 + idx_y * 1*1 * xdim31_opensbliblock00Kernel081 + idx_z * 1*1 * xdim31_opensbliblock00Kernel081 * ydim31_opensbliblock00Kernel081], xdim31_opensbliblock00Kernel081, ydim31_opensbliblock00Kernel081};
    ptr_double ptr32 = { &arg32[base32 + idx_x * 1*1 + idx_y * 1*1 * xdim32_opensbliblock00Kernel081 + idx_z * 1*1 * xdim32_opensbliblock00Kernel081 * ydim32_opensbliblock00Kernel081], xdim32_opensbliblock00Kernel081, ydim32_opensbliblock00Kernel081};
    ptr_double ptr33 = { &arg33[base33 + idx_x * 1*1 + idx_y * 1*1 * xdim33_opensbliblock00Kernel081 + idx_z * 1*1 * xdim33_opensbliblock00Kernel081 * ydim33_opensbliblock00Kernel081], xdim33_opensbliblock00Kernel081, ydim33_opensbliblock00Kernel081};
    opensbliblock00Kernel081(ptr0,
                                  ptr1,
                                  ptr2,
                                  ptr3,
                                  ptr4,
                                  ptr5,
                                  ptr6,
                                  ptr7,
                                  ptr8,
                                  ptr9,
                                  ptr10,
                                  ptr11,
                                  ptr12,
                                  ptr13,
                                  ptr14,
                                  ptr15,
                                  ptr16,
                                  ptr17,
                                  ptr18,
                                  ptr19,
                                  ptr20,
                                  ptr21,
                                  ptr22,
                                  ptr23,
                                  ptr24,
                                  ptr25,
                                  ptr26,
                                  ptr27,
                                  ptr28,
                                  ptr29,
                                  ptr30,
                                  ptr31,
                                  ptr32,
                                  ptr33,
                                  gama,
                                  rcinv7,
                                  rc8,
                                  rc9,
                                  rcinv10,
                                  rcinv11,
                                  rc12);
  }

}
